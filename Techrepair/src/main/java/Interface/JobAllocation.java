/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interface;


import databaseconnection.ConnectionManager;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import net.proteanit.sql.DbUtils;  // Ensure you have this dependency for resultSetToTableModel
/**
 *
 * @author MSI
 */
public class JobAllocation extends javax.swing.JFrame {

    Connection connect = null;
    PreparedStatement p = null;
    ResultSet r = null; 
    
    /**
     * Creates new form login
     */
    // Constructor
    
    public JobAllocation() {
        initComponents();
        
        // Connect to DB
        connect = ConnectionManager.conn();

        // Load table with employee data
        tableload();
    }
    
    //load the table with employees who match the job role and availability
    public void tableload(){
   
        // SQL query to select necessary fields from the table
        String sql = "SELECT EmpID, EmpName, JobRole, Skills, Availability FROM job_allocation";
        try {
            // Prepare the SQL statement
            p = connect.prepareStatement(sql);
            
        } catch (SQLException ex) {
            Logger.getLogger(JobAllocation.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            // Execute the SQL query and store the result in ResultSet
            r = p.executeQuery();
        } catch (SQLException ex) {
            Logger.getLogger(JobAllocation.class.getName()).log(Level.SEVERE, null, ex);
        }
        // Set the model for jTable1 with the ResultSet data
        jTable1.setModel(DbUtils.resultSetToTableModel(r));
        // Close resources in the finally block to ensure they are closed even if an exception occurs
        try {
            if (r != null) r.close();
            if (p != null) p.close();
        } catch (SQLException e) {
            System.out.println("Error closing resources: " + e.getMessage());
        }finally{
            closeResources();
        }
    }  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        idbox = new javax.swing.JTextField();
        namebox = new javax.swing.JTextField();
        jobbox = new javax.swing.JTextField();
        skillsbox = new javax.swing.JTextField();
        searchbox = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Employee ID");

        jLabel2.setText("Job Roles");

        jLabel3.setText("Skills");

        jLabel4.setText("Availability Status");

        jLabel6.setText("Employee Name");

        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("DELETE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("UPDATE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("SEARCH");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("BACK");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel5.setText("Allocate Employees to Customer Jobs");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Employee ID", "Employee Name", "Job Roles", "Skills", "Availability Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        idbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idboxActionPerformed(evt);
            }
        });

        skillsbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skillsboxActionPerformed(evt);
            }
        });

        searchbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchboxActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Job Status ", "Pending", "Ongoing", "Completed" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jButton4)
                                    .addGap(18, 18, 18)
                                    .addComponent(searchbox))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(idbox)
                                        .addComponent(jobbox)
                                        .addComponent(skillsbox)
                                        .addComponent(namebox)
                                        .addComponent(jComboBox1, 0, 141, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel5))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(jButton5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(idbox, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(namebox, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jobbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(skillsbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jButton3))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(searchbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addComponent(jButton5))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(78, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

// Delete an employee from job allocation
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
try {
            String empID = idbox.getText();

            String sql = "DELETE FROM job_allocation WHERE EmpID = ?";
            p = connect.prepareStatement(sql);
            p.setString(1, empID);
            p.executeUpdate();

            JOptionPane.showMessageDialog(null, "Employee removed from job allocation successfully");
            tableload();  // Refresh the table after deletion
        } catch (SQLException e) {
            System.out.println("Error deleting job allocation: " + e.getMessage());
        } finally {
            closeResources();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    
    //Add a new job allocation entry
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        try{
            String empID = idbox.getText();
            String empname = namebox.getText();
            String jobRole = jobbox.getText();
            String skills = skillsbox .getText();
            String availability = jComboBox1.getSelectedItem().toString();
            
            String sql = "INSERT INTO job_allocation ( EmpName, JobRole, Skills, Availability) VALUES (?,?,?,?)";
            p = connect.prepareStatement(sql);
            p.setString(1, empname);
            p.setString(2, jobRole);
            p.setString(3, skills);
            p.setString(4, availability);

            p.executeUpdate();
            JOptionPane.showMessageDialog(null, "Employee added to job allocation successfully");
            tableload();  // Refresh the table after addition
        } catch (SQLException e) {
            System.out.println("Error adding job allocation: " + e.getMessage());
        } finally {
            closeResources();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

// Search for employees based on their job role or skills
    private void searchboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchboxActionPerformed
        // TODO add your handling code here:
try {
            String searchTerm = searchbox.getText();
            String sql = "SELECT EmpID, EmpName, JobRole, Skills, Availability FROM job_allocation WHERE JobRole LIKE ? OR Skills LIKE ?";
            p = connect.prepareStatement(sql);
            p.setString(1, "%" + searchTerm + "%");
            p.setString(2, "%" + searchTerm + "%");

            r = p.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(r));
        } catch (SQLException e) {
            System.out.println("Error searching employees: " + e.getMessage());
        } finally {
            closeResources();
        }
    }//GEN-LAST:event_searchboxActionPerformed

    private void idboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idboxActionPerformed

    private void skillsboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skillsboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_skillsboxActionPerformed

// Update employee job assignment details
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
   try{
     String empID = idbox.getText();
     String empname = namebox.getText();
     String jobrole = jobbox.getText();
     String skills = skillsbox .getText();
     String availability = jComboBox1.getSelectedItem().toString();

    String sql = "UPDATE job_allocation SET EmpName = ?, JobRole = ?, Skills = ?, Availability = ? WHERE EmpID = ?";
    p = connect.prepareStatement(sql);
    p.setString(5, empID);
    p.setString(1, empname);
    p.setString(2, jobrole);
    p.setString(3, skills);
    p.setString(4, availability);
    p.executeUpdate();

JOptionPane.showMessageDialog(null, "Employee job allocation updated successfully");
            tableload();  // Refresh the table after update
        } catch (SQLException e) {
            System.out.println("Error updating job allocation: " + e.getMessage());
        } finally {
            closeResources();
        }
    }//GEN-LAST:event_jButton3ActionPerformed


// Search for employees based on their job role or skills
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

 try {
            String searchTerm = idbox.getText();
            String sql = "SELECT EmpID, EmpName, JobRole, Skills, Availability FROM manageemp WHERE JobRole LIKE ? OR Skills LIKE ?";
            p = connect.prepareStatement(sql);
            p.setString(1, "%" + searchTerm + "%");
            p.setString(2, "%" + searchTerm + "%");

            r = p.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(r));
        } catch (SQLException e) {
            System.out.println("Error searching employees: " + e.getMessage());
        } finally {
            closeResources();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

// Go back to the previous menu
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       Main_menu obj = new Main_menu();
            obj.setVisible(true);
            dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int r = jTable1.getSelectedRow();

        String EmpID = jTable1.getValueAt(r, 0).toString();
        String EmpName = jTable1.getValueAt(r, 1).toString();
        String JobRole = jTable1.getValueAt(r, 2).toString();
        String Skills = jTable1.getValueAt(r, 3).toString();
        String Availability = jTable1.getValueAt(r, 4).toString();

       idbox.setText(EmpID);
     namebox.setText(EmpName);
     jobbox.setText(JobRole);
     skillsbox .setText(Skills);
    }//GEN-LAST:event_jTable1MouseClicked
    private void closeResources() {
    try {
        if (r != null) r.close();
        if (p != null) p.close();
    } catch (SQLException e) {
        System.out.println("Error closing resources: " + e.getMessage());
    }

}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JobAllocation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new JobAllocation().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField idbox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jobbox;
    private javax.swing.JTextField namebox;
    private javax.swing.JTextField searchbox;
    private javax.swing.JTextField skillsbox;
    // End of variables declaration//GEN-END:variables

   
}
